services:
  plex:
    container_name: plex
    image: ghcr.io/hotio/plex
    ports:
      - "32400:32400"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEX_CLAIM_TOKEN=${PLEX_CLAIM}
      - PLEX_ADVERTISE_URL=${PLEX_URL}
      - PLEX_BETA_INSTALL=false
      - PLEX_PURGE_CODECS=false
      - PLEX_PASS=${PLEX_PASS}
      - /dev/dri:/dev/dri
    volumes:
      - ${CONFIG_PATH}/plex:/config
      - ${TRANSCODE_PATH}/plex:/transcode
      - ${DATA_PATH}/media:/data/media
    restart: unless-stopped
  autoscan:
    container_name: autoscan
    image: ghcr.io/hotio/autoscan
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "3030:3030"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEX_LOGIN=${PLEX_LOGIN}
      - PLEX_PASSWORD=${PLEX_PASSWORD}
    volumes:
      - ${CONFIG_PATH}/autoscan:/config
    restart: unless-stopped
    depends_on:
    - plex
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr
    ports:
      - "8191:8191"
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    networks:
      - ${DOCKER_NETWORK}
    restart: unless-stopped
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "9696:9696"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/prowlarr:/config
    restart: unless-stopped
    depends_on:
    - flaresolverr
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "7878:7878"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  radarr-uhd:
    container_name: radarr-uhd
    image: ghcr.io/hotio/radarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "7879:7878"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/radarr-uhd:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8989:8989"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  sonarr-uhd:
    container_name: sonarr-uhd
    image: ghcr.io/hotio/sonarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8998:8989"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/sonarr-uhd:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "6767:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/bazarr:/config
      - ${DATA_PATH}/media:/data/media
    restart: unless-stopped
    depends_on:
    - radarr
    - radarr-uhd
    - sonarr
    - sonarr-uhd
  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8686:8686"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/lidarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8787:8787"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/readarr:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
  notifiarr:
    container_name: notifiarr
    hostname: notifiarr
    image: golift/notifiarr
    ports:
      - "5454:5454"
    volumes:
      - ${CONFIG_PATH}/notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id
    restart: unless-stopped
  overseerr:
    container_name: overseerr
    image: ghcr.io/hotio/overseerr
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "5055:5055"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/overseerr:/config
      - ${DATA_PATH}/media:/data/media
    restart: unless-stopped
    depends_on:
    - plex
    - radarr
    - radarr-uhd
    - sonarr
    - sonarr-uhd
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8080:8080"
      - "8118:8118"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VPN_ENABLED=${VPN_ENABLED} # There needs to be a file wg0.conf located in /config/wireguard
      - VPN_PROVIDER=${VPN_PROVIDER} # Possible values are generic, proton and pia.
      - VPN_LAN_NETWORK=${VPN_LAN_NETWORK} # Every device with an ip in the range 192.168.1.0 - 192.168.1.255 on your LAN is allowed access to the WebUI
      - VPN_CONF=wg0
      - VPN_LAN_LEAK_ENABLED=false
      - PRIVOXY_ENABLED=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_AUTO_PORT_FORWARD=true # Auto retrieve a forwarded port and configure the supported app if set to true or if you can manually request/set a forwarded port in the VPN provider's web interface, fill in the port number.
      - VPN_KEEP_LOCAL_DNS=false # Setting this to true will re-add the default nameserver if it's been overwritten by the DNS = ... entry in wgO.conf. This should keep container name resolution working.
      - VPN_HEALTHCHECK_ENABLED=true
      - UNBOUND_ENABLED=false # When enabling the Unbound DNS server your requests will use DNS over TLS to Cloudflare. 
    volumes:
      - ${CONFIG_PATH}/qbittorrent:/config
      - ${DATA_PATH}/torrents:/data/torrents
    cap_add:
      - NET_ADMIN
    dns:
      - 1.1.1.1
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    restart: unless-stopped
  autobrr:
    container_name: autobrr
    image: ghcr.io/autobrr/autobrr:latest
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "7474:7474"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/autobrr:/config
    restart: unless-stopped
  omegabrr:
    container_name: omegabrr
    image: ghcr.io/autobrr/omegabrr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/omegabrr:/config
    networks:
      - ${DOCKER_NETWORK}
    restart: unless-stopped
  cross-seed:
    container_name: cross-seed
    image: ghcr.io/cross-seed/cross-seed
    ports:
      - "2468:2468" # you'll need this for daemon mode only
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/cross-seed:/config
      - ${PATH_TO_TORRENTDIR}:/torrents:ro # your torrent clients .torrent cache, can and should be mounted read-only (BT_Backup). I now have: /torrents <-> ${DATA_PATH}/torrents/cross-seed-blank
      - ${PATH_TO_OUTPUT_FOLDER}:/cross-seeds # In unRAID I now have: /cross-seeds <-> ${DATA_PATH}/torrents/cross-seed-torrents
      - ${DATA_PATH}/torrents:/data/torrents # OPTIONAL!!! this is location of your data (used for data-based searches or linking)
        # will need to mirror your torrent client's path (like Arr's do)
    command: deamon # this enables the daemon, change to search to specifically run a search ONLY
    networks:
      - ${DOCKER_NETWORK}
    restart: unless-stopped # make sure to not enable it in search mode, otherwise it will keep rerunning constantly
    depends_on:
      - qbittorrent
  tautulli:
    container_name: tautulli
    image: ghcr.io/hotio/tautulli
    networks:
      - ${DOCKER_NETWORK}
    ports:
      - "8181:8181"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/tautulli:/config
    restart: unless-stopped
    depends_on:
    - plex
  unpackerr:
    container_name: unpackerr
    image: ghcr.io/hotio/unpackerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/unpacker:/config
      - ${DATA_PATH}:/data
    restart: unless-stopped
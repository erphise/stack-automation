version: "3.8"
services:
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr
    ports:
      - "8191:8191"
    environment:
      - LOG_LEVEL=info
      - TZ=Europe/Madrid
    restart: unless-stopped
  jackett:
    container_name: jackett
    image: ghcr.io/hotio/jackett
    ports:
      - "9117:9117"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/jackett:/config
    depends_on:
    - flaresolverr
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    ports:
      - "9696:9696"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/prowlarr:/config
    restart: unless-stopped
    depends_on:
    - flaresolverr
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/radarr:/config
      - /volume3/data:/data
    restart: unless-stopped
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    ports:
      - "8989:8989"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/sonarr:/config
      - /volume3/data:/data
    restart: unless-stopped
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr
    ports:
      - "6767:6767"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/bazarr:/config
      - /volume3/data/media:/data/media
    restart: unless-stopped
    depends_on:
    - radarr
    - sonarr
  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr
    ports:
      - "8686:8686"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/lidarr:/config
      - /volume3/data:/data
    restart: unless-stopped
  notifiarr:
    container_name: notifiarr
    hostname: notifiarr
    image: golift/notifiarr
    ports:
      - "5454:5454"
    volumes:
      - /volume1/Docker/notifiarr:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id
    restart: unless-stopped
  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    ports:
      - "5055:5055"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/overseerr:/config
      - /volume3/data/media:/data/media
    restart: unless-stopped
    depends_on:
    - radarr
    - sonarr
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent
    ports:
      - "8080:8080"
      - "8118:8118"
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
      - VPN_ENABLED=false # There needs to be a file wg0.conf located in /config/wireguard
      - VPN_PROVIDER=generic # Possible values are generic, proton and pia.
      - VPN_LAN_NETWORK=192.168.1.0/24 # Every device with an ip in the range 192.168.1.0 - 192.168.1.255 on your LAN is allowed access to the WebUI
      - VPN_CONF=wg0
      - VPN_LAN_LEAK_ENABLED=false
      - PRIVOXY_ENABLED=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_AUTO_PORT_FORWARD=true # Auto retrieve a forwarded port and configure the supported app if set to true or if you can manually request/set a forwarded port in the VPN provider's web interface, fill in the port number.
      - VPN_KEEP_LOCAL_DNS=false # Setting this to true will re-add the default nameserver if it's been overwritten by the DNS = ... entry in wgO.conf. This should keep container name resolution working.
      - VPN_HEALTHCHECK_ENABLED=true
      - UNBOUND_ENABLED=false # When enabling the Unbound DNS server your requests will use DNS over TLS to Cloudflare. 
    volumes:
      - /volume1/Docker/qbittorrent:/config
      - /volume3/data/torrents:/data/torrents
    cap_add:
      - NET_ADMIN
    dns:
      - 1.1.1.1
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    restart: unless-stopped
  unpackerr:
    container_name: unpackerr
    image: ghcr.io/hotio/unpackerr
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Madrid
    volumes:
      - /volume1/Docker/unpacker:/config
      - /volume3/data:/data
    restart: unless-stopped